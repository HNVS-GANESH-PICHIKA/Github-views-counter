name: Update Repository Data

on:
  schedule:
    - cron: '0 0 * * *'  # Runs daily at midnight UTC
  workflow_dispatch:  # Allows manual triggering

jobs:
  update-data:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'
    - name: Install dependencies
      run: npm install node-fetch@2
    - name: Create update script
      run: |
        echo "const fetch = require('node-fetch');" > update-data.js
        echo "const fs = require('fs').promises;" >> update-data.js
        echo "" >> update-data.js
        echo "async function fetchData() {" >> update-data.js
        echo "  const username = process.env.GITHUB_REPOSITORY_OWNER;" >> update-data.js
        echo "  const apiUrl = \`https://api.github.com/users/\${username}/repos\`;" >> update-data.js
        echo "" >> update-data.js
        echo "  const response = await fetch(apiUrl, {" >> update-data.js
        echo "    headers: {" >> update-data.js
        echo "      'Authorization': \`token \${process.env.GITHUB_TOKEN}\`" >> update-data.js
        echo "    }" >> update-data.js
        echo "  });" >> update-data.js
        echo "  const repos = await response.json();" >> update-data.js
        echo "" >> update-data.js
        echo "  const viewsPromises = repos.map(repo => " >> update-data.js
        echo "    fetch(\`https://api.github.com/repos/\${username}/\${repo.name}/traffic/views\`, {" >> update-data.js
        echo "      headers: {" >> update-data.js
        echo "        'Authorization': \`token \${process.env.GITHUB_TOKEN}\`" >> update-data.js
        echo "      }" >> update-data.js
        echo "    }).then(res => res.json())" >> update-data.js
        echo "  );" >> update-data.js
        echo "" >> update-data.js
        echo "  const viewsData = await Promise.all(viewsPromises);" >> update-data.js
        echo "" >> update-data.js
        echo "  const repoData = repos.map((repo, index) => ({" >> update-data.js
        echo "    name: repo.name," >> update-data.js
        echo "    lastUpdated: new Date(repo.updated_at).toLocaleDateString()," >> update-data.js
        echo "    unique: viewsData[index].uniques," >> update-data.js
        echo "    views: viewsData[index].count" >> update-data.js
        echo "  }));" >> update-data.js
        echo "" >> update-data.js
        echo "  await fs.writeFile('repoData.json', JSON.stringify(repoData, null, 2));" >> update-data.js
        echo "}" >> update-data.js
        echo "" >> update-data.js
        echo "fetchData().catch(console.error);" >> update-data.js
    - name: Update data
      env:
        GITHUB_TOKEN: ${{ secrets.PAT }}
      run: node update-data.js
    - name: Commit and push if changed
      run: |
        git config --global user.email "action@github.com"
        git config --global user.name "GitHub Action"
        git add repoData.json
        git commit -m "Update repository data" || exit 0
        git push
