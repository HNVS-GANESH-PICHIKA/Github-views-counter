name: Update Repository Data

on:
  schedule:
    - cron: '0 0 * * *'  # Runs daily at midnight UTC
  workflow_dispatch:  # Allows manual triggering

jobs:
  update-data:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'
    - name: Install dependencies
      run: npm install node-fetch@2
    - name: Create update script
      run: |
        cat << EOF > update-data.js
        const fetch = require('node-fetch');
        const fs = require('fs').promises;

        async function fetchData() {
          const username = process.env.GITHUB_REPOSITORY_OWNER;
          const apiUrl = `https://api.github.com/users/${username}/repos`;

          const response = await fetch(apiUrl, {
            headers: {
              'Authorization': `token ${process.env.GITHUB_TOKEN}`
            }
          });
          const repos = await response.json();

          const viewsPromises = repos.map(repo => 
            fetch(`https://api.github.com/repos/${username}/${repo.name}/traffic/views`, {
              headers: {
                'Authorization': `token ${process.env.GITHUB_TOKEN}`
              }
            }).then(res => res.json())
          );

          const viewsData = await Promise.all(viewsPromises);

          const repoData = repos.map((repo, index) => ({
            name: repo.name,
            lastUpdated: new Date(repo.updated_at).toLocaleDateString(),
            unique: viewsData[index].uniques,
            views: viewsData[index].count
          }));

          await fs.writeFile('repoData.json', JSON.stringify(repoData, null, 2));
        }

        fetchData().catch(console.error);
        EOF
    - name: Update data
      env:
        GITHUB_TOKEN: ${{ secrets.PAT }}
      run: node update-data.js
    - name: Commit and push if changed
      run: |
        git config --global user.email "action@github.com"
        git config --global user.name "GitHub Action"
        git add repoData.json
        git commit -m "Update repository data" || exit 0
        git push
